// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  description String
  price       Float
  dimensions  String?
  materials   String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  images      ProductImage[]
  cartItems   CartItem[]
  subcategoryId String?
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
}

model Category {
  id            String        @id @default(cuid())
  name          String        @unique
  slug          String        @unique
  subcategories Subcategory[]
}

model Subcategory {
  id          String    @id @default(cuid())
  name        String    @unique
  slug        String    @unique
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])
  products    Product[]
}

model ProductImage {
  id        String   @id @default(cuid())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
}

model Cart {
  id        String     @id @default(cuid())
  userId    String?    @unique
  user      User?      @relation(fields: [userId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(cuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId, cartId])
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart?
}

enum UserRole {
  USER
  ADMIN
}